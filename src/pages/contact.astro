---
import Layout from '../layouts/Layout.astro'
import styles from '../styles/page.module.css'
import ContactForm from '../components/ContactForm.astro'

const title = 'お問い合わせ'
const description = '当サイトへのお問い合わせはこちらのフォームからお願いいたします。'
const ogImage = new URL('/ogp.png', Astro.site).toString()

// Turnstileのサイトキーを環境変数から取得
const TURNSTILE_SITE_KEY = import.meta.env.PUBLIC_TURNSTILE_SITE_KEY
---

<Layout title={title} description={description} path="/contact" ogImage={ogImage}>
  <div slot="main" class={styles.main}>
    <h1>お問い合わせ</h1>

    <section class={styles.section}>
      <div class="intro">
        <h2>お問い合わせについて</h2>
        <ul class="notice-list">
          <li>通常2-3営業日以内にご返信いたします</li>
          <li>土日祝日、年末年始は返信が遅れる場合があります</li>
        </ul>
      </div>

      <ContactForm />
    </section>
  </div>
</Layout>

<!-- Turnstileスクリプト -->
<script src="https://challenges.cloudflare.com/turnstile/v0/api.js" async defer></script>

<script>
  const form = document.getElementById('contactForm') as HTMLFormElement;
  const toast = document.getElementById('toast');

  if (form) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      try {
        const formData = new FormData(form);
        const turnstileResponse = formData.get('cf-turnstile-response');
        
        if (!turnstileResponse) {
          throw new Error('認証を完了してください');
        }

        const response = await fetch('/api/contact', {
          method: 'POST',
          body: formData
        });

        if (!response.ok) {
          throw new Error('送信に失敗しました');
        }

        // フォームをリセット
        form.reset();
        // Turnstileをリセット
        turnstile.reset();

        // 完了メッセージを表示
        if (toast) {
          toast.classList.add('show');
          setTimeout(() => {
            toast.classList.remove('show');
          }, 3000);
        }
      } catch (error) {
        console.error('Error:', error);
        if (toast) {
          toast.textContent = error.message || 'エラーが発生しました。時間をおいて再度お試しください。';
          toast.classList.add('show', 'error');
          setTimeout(() => {
            toast.classList.remove('show', 'error');
          }, 3000);
        }
      }
    });
  }
</script>

<style>
  .intro {
    margin-bottom: 2rem;
  }

  .notice-list {
    list-style: disc;
    margin-left: 1.5rem;
    color: var(--color-text-light);
  }

  @media (max-width: 640px) {
    .intro {
      padding: 1rem;
      margin-bottom: 1.5rem;
    }
  }
</style> 