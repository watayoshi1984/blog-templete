---
import * as interfaces from '../../lib/interfaces.ts'
import { snakeToKebab } from '../../lib/style-helpers.ts'
import RichText from './RichText.astro'
import NotionBlocks from '../NotionBlocks.astro'
import '../../styles/notion-color.css'

export interface Props {
  block: interfaces.Block
  headings: interfaces.Block[]
}

const { block, headings } = Astro.props
---

<details class={`toggle ${snakeToKebab(block.Toggle.Color)}`}>
  <summary>
    {
      block.Toggle.RichTexts.map((richText: interfaces.RichText) => (
        <RichText richText={richText} />
      ))
    }
  </summary>
  <div>
    <NotionBlocks blocks={block.Toggle.Children} headings={headings} />
  </div>
</details>

<style>
  .toggle {
    margin: 1rem 0;
    padding: 0.8rem;
    background: var(--color-bg-secondary);
    border-radius: var(--radius-md);
    border: 1px solid var(--color-border);
    box-shadow: var(--shadow-sm);
  }

  .toggle > summary {
    cursor: pointer;
    padding: 0.5rem;
    margin: -0.5rem;
    border-radius: var(--radius-sm);
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--color-text);
  }

  .toggle > summary:hover {
    background: rgba(var(--accent), 0.05);
    color: var(--color-primary);
  }

  .toggle > summary::before {
    content: '▶';
    font-size: 0.8em;
    color: var(--color-primary);
    transition: transform 0.3s ease;
  }

  .toggle[open] > summary::before {
    transform: rotate(90deg);
  }

  .toggle > div {
    margin: 1rem 0 0 1.5rem;
    padding: 1rem;
    border-left: 2px solid rgba(var(--accent), 0.2);
  }

  /* カラーバリエーション */
  .toggle.gray {
    border-color: #9e9e9e;
  }
  .toggle.brown {
    border-color: #795548;
  }
  .toggle.orange {
    border-color: #ff9800;
  }
  .toggle.yellow {
    border-color: #ffc107;
  }
  .toggle.green {
    border-color: var(--color-primary);
  }
  .toggle.blue {
    border-color: #2196f3;
  }
  .toggle.purple {
    border-color: #9c27b0;
  }
  .toggle.pink {
    border-color: #e91e63;
  }
  .toggle.red {
    border-color: #f44336;
  }

  /* ライトモード時の背景色 */
  :global(:root:not(.dark)) .toggle {
    background: rgba(var(--accent), 0.05);
  }

  :global(:root:not(.dark)) .toggle.gray {
    background: rgba(158, 158, 158, 0.05);
  }
  :global(:root:not(.dark)) .toggle.brown {
    background: rgba(121, 85, 72, 0.05);
  }
  :global(:root:not(.dark)) .toggle.orange {
    background: rgba(255, 152, 0, 0.05);
  }
  :global(:root:not(.dark)) .toggle.yellow {
    background: rgba(255, 193, 7, 0.05);
  }
  :global(:root:not(.dark)) .toggle.green {
    background: rgba(var(--accent), 0.05);
  }
  :global(:root:not(.dark)) .toggle.blue {
    background: rgba(33, 150, 243, 0.05);
  }
  :global(:root:not(.dark)) .toggle.purple {
    background: rgba(156, 39, 176, 0.05);
  }
  :global(:root:not(.dark)) .toggle.pink {
    background: rgba(233, 30, 99, 0.05);
  }
  :global(:root:not(.dark)) .toggle.red {
    background: rgba(244, 67, 54, 0.05);
  }

  /* ダークモード時の背景色 */
  :global(.dark) .toggle {
    background: rgba(76, 175, 80, 0.15);
  }

  :global(.dark) .toggle.gray {
    background: rgba(158, 158, 158, 0.15);
  }
  :global(.dark) .toggle.brown {
    background: rgba(121, 85, 72, 0.15);
  }
  :global(.dark) .toggle.orange {
    background: rgba(255, 152, 0, 0.15);
  }
  :global(.dark) .toggle.yellow {
    background: rgba(255, 193, 7, 0.15);
  }
  :global(.dark) .toggle.green {
    background: rgba(76, 175, 80, 0.15);
  }
  :global(.dark) .toggle.blue {
    background: rgba(33, 150, 243, 0.15);
  }
  :global(.dark) .toggle.purple {
    background: rgba(156, 39, 176, 0.15);
  }
  :global(.dark) .toggle.pink {
    background: rgba(233, 30, 99, 0.15);
  }
  :global(.dark) .toggle.red {
    background: rgba(244, 67, 54, 0.15);
  }

  @media (max-width: 640px) {
    .toggle {
      margin: 0.8rem 0;
      padding: 0.6rem;
    }

    .toggle > summary {
      padding: 0.4rem;
      margin: -0.4rem;
    }

    .toggle > div {
      margin: 0.8rem 0 0 1rem;
      padding: 0.8rem;
    }
  }
</style>
