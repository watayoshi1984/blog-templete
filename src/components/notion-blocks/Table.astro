---
import * as interfaces from '../../lib/interfaces.ts'
import RichText from './RichText.astro'

export interface Props {
  block: interfaces.Block
}

const { block } = Astro.props
---

<div class="table">
  <table>
    <tbody>
      {
        block.Table.Rows.map((tableRow: interfaces.TableRow, j: number) => (
          <tr>
            {tableRow.Cells.map((cell: interfaces.TableCell, i: number) => {
              if (
                (block.Table.HasRowHeader && i === 0) ||
                (block.Table.HasColumnHeader && j === 0)
              ) {
                return (
                  <th>
                    {cell.RichTexts.map((richText: interfaces.RichText) => (
                      <RichText richText={richText} />
                    ))}
                  </th>
                )
              }
              return (
                <td>
                  {cell.RichTexts.map((richText: interfaces.RichText) => (
                    <RichText richText={richText} />
                  ))}
                </td>
              )
            })}
          </tr>
        ))
      }
    </tbody>
  </table>
</div>

<style>
  .table {
    overflow-x: auto;
    margin: 1.5rem 0;
    border-radius: var(--radius-md);
    box-shadow: var(--shadow-sm);
  }
  
  .table table {
    width: 100%;
    border-collapse: collapse;
    font-size: 1rem;
    line-height: 1.6;
  }
  
  .table th,
  .table td {
    padding: 0.8rem 1rem;
    border: 1px solid var(--color-border);
    text-align: left;
  }
  
  .table th {
    background: rgba(var(--accent), 0.05);
    font-weight: 600;
    color: var(--color-text-heading);
  }
  
  .table td {
    background: var(--color-bg);
  }
  
  .table tr:nth-child(even) td {
    background: rgba(var(--accent), 0.02);
  }
  
  .table tr:hover td {
    background: rgba(var(--accent), 0.05);
  }
  
  @media (max-width: 640px) {
    .table {
      margin: 1rem 0;
    }
    
    .table th,
    .table td {
      padding: 0.6rem 0.8rem;
      font-size: 0.95rem;
    }
  }
</style>
